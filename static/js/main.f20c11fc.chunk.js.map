{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","redux/actions.js","redux/reduser.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContacts","createAction","name","number","payload","id","uuidv4","deleteContacts","changeFilter","items","createReducer","actions","state","some","contact","alert","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","devTools","process","persistor","persistStore","connect","dispatch","onSubmit","useState","setName","setNumber","nameId","numberId","handleChange","event","currentTarget","value","console","log","reset","className","styles","form","preventDefault","labelName","htmlFor","type","onChange","pattern","title","required","labelNumber","button","tupe","ElementContactList","onDeleteContact","ContactList_name","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","contactList","map","contactList_items","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f20c11fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__27jWU\",\"form\":\"ContactForm_form__2CnGz\",\"labelName\":\"ContactForm_labelName__34eye\",\"labelNumber\":\"ContactForm_labelNumber__3gyNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1g6Uo\",\"contactList_items\":\"ContactList_contactList_items__PVxDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"Filter_labelName__eB2w5\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContacts = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nconst deleteContacts = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContacts, deleteContacts, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContacts]: (state, { payload }) => {\r\n    const repeatСontact = state.some(contact => contact.name === payload.name);\r\n    if (repeatСontact) {\r\n      alert(`${payload.name} is already in contacts.`);\r\n      return state;\r\n    }\r\n\r\n    return [...state, payload];\r\n  },\r\n\r\n  [actions.deleteContacts]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReduser from './reduser';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","// import { getDefaultNormalizer } from '@testing-library/react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.scss';\r\nimport actions from '../../redux/actions';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        // setName(prevState => [...prevState, value]);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        // setNumber(prevState => [...prevState, value]);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  console.log();\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.labelName} htmlFor={nameId}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameId}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.labelNumber} htmlFor={numberId}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberId}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.button} tupe=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContacts(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.labelName}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import styles from \"./ElementContactList.module.scss\";\r\n\r\nconst ElementContactList = ({ name, number, onDeleteContact }) => (\r\n  <>\r\n    <span className={styles.ContactList_name}>\r\n      {name}: {number}\r\n    </span>\r\n    <button onClick={onDeleteContact}>Delete</button>\r\n  </>\r\n);\r\n\r\nexport default ElementContactList;\r\n","import { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport ElementContactList from '../ElementContactList';\r\nimport styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.contactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles.contactList_items} key={id}>\r\n        <ElementContactList\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filterName = allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return filterName;\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter, items } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\n// import useLocalStorage from '../../hooks/useLocalStorage';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './App.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}